CREATE TABLE ROLES (
    id VARCHAR(100) NOT NULL PRIMARY KEY UNIQUE,
    role VARCHAR(100) NOT NULL UNIQUE
);

INSERT INTO ROLES VALUES
    ('ROLE_1', 'idealizador'),
    ( 'ROLE_2', 'admin'),
    ('ROLE_3', 'voluntario_geral'),
    ('ROLE_4','voluntario_especifico'),
    ('ROLE_5', 'cadastrado')
;

SELECT * FROM ROLES;


CREATE TABLE countries(
    code VARCHAR(2) NOT NULL PRIMARY KEY UNIQUE,
    name VARCHAR(100) NOT NULL UNIQUE
);

INSERT INTO countries (code, name)
VALUES
('AF', 'Afghanistan'),
('AX', 'Aland Islands'),
('AL', 'Albania'),
('DZ', 'Algeria'),
('AS', 'American Samoa'),
('AD', 'Andorra'),
('AO', 'Angola'),
('AI', 'Anguilla'),
('AQ', 'Antarctica'),
('AG', 'Antigua and Barbuda'),
('AR', 'Argentina'),
('AM', 'Armenia'),
('AW', 'Aruba'),
('AU', 'Australia'),
('AT', 'Austria'),
('AZ', 'Azerbaijan'),
('BS', 'Bahamas'),
('BH', 'Bahrain'),
('BD', 'Bangladesh'),
('BB', 'Barbados'),
('BY', 'Belarus'),
('BE', 'Belgium'),
('BZ', 'Belize'),
('BJ', 'Benin'),
('BM', 'Bermuda'),
('BT', 'Bhutan'),
('BO', 'Bolivia'),
('BA', 'Bosnia and Herzegovina'),
('BW', 'Botswana'),
('BV', 'Bouvet Island'),
('BR', 'Brazil'),
('IO', 'British Indian Ocean Territory'),
('BN', 'Brunei Darussalam'),
('BG', 'Bulgaria'),
('BF', 'Burkina Faso'),
('BI', 'Burundi'),
('KH', 'Cambodia'),
('CM', 'Cameroon'),
('CA', 'Canada'),
('CV', 'Cape Verde'),
('KY', 'Cayman Islands'),
('CF', 'Central African Republic'),
('TD', 'Chad'),
('CL', 'Chile'),
('CN', 'China'),
('CX', 'Christmas Island'),
('CC', 'Cocos (Keeling) Islands'),
('CO', 'Colombia'),
('KM', 'Comoros'),
('CG', 'Congo'),
('CD', 'Congo, The Democratic Republic of the'),
('CK', 'Cook Islands'),
('CR', 'Costa Rica'),
('CI', 'Cote D"Ivoire'),
('HR', 'Croatia'),
('CU', 'Cuba'),
('CY', 'Cyprus'),
('CZ', 'Czech Republic'),
('DK', 'Denmark'),
('DJ', 'Djibouti'),
('DM', 'Dominica'),
('DO', 'Dominican Republic'),
('EC', 'Ecuador'),
('EG', 'Egypt'),
('SV', 'El Salvador'),
('GQ', 'Equatorial Guinea'),
('ER', 'Eritrea'),
('EE', 'Estonia'),
('ET', 'Ethiopia'),
('FK', 'Falkland Islands (Malvinas)'),
('FO', 'Faroe Islands'),
('FJ', 'Fiji'),
('FI', 'Finland'),
('FR', 'France'),
('GF', 'French Guiana'),
('PF', 'French Polynesia'),
('TF', 'French Southern Territories'),
('GA', 'Gabon'),
('GM', 'Gambia'),
('GE', 'Georgia'),
('DE', 'Germany'),
('GH', 'Ghana'),
('GI', 'Gibraltar'),
('GR', 'Greece'),
('GL', 'Greenland'),
('GD', 'Grenada'),
('GP', 'Guadeloupe'),
('GU', 'Guam'),
('GT', 'Guatemala'),
('GG', 'Guernsey'),
('GN', 'Guinea'),
('GW', 'Guinea-Bissau'),
('GY', 'Guyana'),
('HT', 'Haiti'),
('HM', 'Heard Island and McDonald Islands'),
('VA', 'Holy See (Vatican City State)'),
('HN', 'Honduras'),
('HK', 'Hong Kong'),
('HU', 'Hungary'),
('IS', 'Iceland'),
('IN', 'India'),
('ID', 'Indonesia'),
('IR', 'Iran, Islamic Republic of'),
('IQ', 'Iraq'),
('IE', 'Ireland'),
('IM', 'Isle of Man'),
('IL', 'Israel'),
('IT', 'Italy'),
('JM', 'Jamaica'),
('JP', 'Japan'),
('JE', 'Jersey'),
('JO', 'Jordan'),
('KZ', 'Kazakhstan'),
('KE', 'Kenya'),
('KI', 'Kiribati'),
('KP', 'Korea, Democratic People"S Republic of'),
('KR', 'Korea, Republic of'),
('KW', 'Kuwait'),
('KG', 'Kyrgyzstan'),
('LA', 'Lao People"S Democratic Republic'),
('LV', 'Latvia'),
('LB', 'Lebanon'),
('LS', 'Lesotho'),
('LR', 'Liberia'),
('LY', 'Libyan Arab Jamahiriya'),
('LI', 'Liechtenstein'),
('LT', 'Lithuania'),
('LU', 'Luxembourg'),
('MO', 'Macao'),
('MK', 'Macedonia, The Former Yugoslav Republic of'),
('MG', 'Madagascar'),
('MW', 'Malawi'),
('MY', 'Malaysia'),
('MV', 'Maldives'),
('ML', 'Mali'),
('MT', 'Malta'),
('MH', 'Marshall Islands'),
('MQ', 'Martinique'),
('MR', 'Mauritania'),
('MU', 'Mauritius'),
('YT', 'Mayotte'),
('MX', 'Mexico'),
('FM', 'Micronesia, Federated States of'),
('MD', 'Moldova, Republic of'),
('MC', 'Monaco'),
('MN', 'Mongolia'),
('ME', 'Montenegro'),
('MS', 'Montserrat'),
('MA', 'Morocco'),
('MZ', 'Mozambique'),
('MM', 'Myanmar'),
('NA', 'Namibia'),
('NR', 'Nauru'),
('NP', 'Nepal'),
('NL', 'Netherlands'),
('AN', 'Netherlands Antilles'),
('NC', 'New Caledonia'),
('NZ', 'New Zealand'),
('NI', 'Nicaragua'),
('NE', 'Niger'),
('NG', 'Nigeria'),
('NU', 'Niue'),
('NF', 'Norfolk Island'),
('MP', 'Northern Mariana Islands'),
('NO', 'Norway'),
('OM', 'Oman'),
('PK', 'Pakistan'),
('PW', 'Palau'),
('PS', 'Palestinian Territory, Occupied'),
('PA', 'Panama'),
('PG', 'Papua New Guinea'),
('PY', 'Paraguay'),
('PE', 'Peru'),
('PH', 'Philippines'),
('PN', 'Pitcairn'),
('PL', 'Poland'),
('PT', 'Portugal'),
('PR', 'Puerto Rico'),
('QA', 'Qatar'),
('RE', 'Reunion'),
('RO', 'Romania'),
('RU', 'Russian Federation'),
('RW', 'Rwanda'),
('SH', 'Saint Helena'),
('KN', 'Saint Kitts and Nevis'),
('LC', 'Saint Lucia'),
('PM', 'Saint Pierre and Miquelon'),
('VC', 'Saint Vincent and the Grenadines'),
('WS', 'Samoa'),
('SM', 'San Marino'),
('ST', 'Sao Tome and Principe'),
('SA', 'Saudi Arabia'),
('SN', 'Senegal'),
('RS', 'Serbia'),
('SC', 'Seychelles'),
('SL', 'Sierra Leone'),
('SG', 'Singapore'),
('SK', 'Slovakia'),
('SI', 'Slovenia'),
('SB', 'Solomon Islands'),
('SO', 'Somalia'),
('ZA', 'South Africa'),
('GS', 'South Georgia and the South Sandwich Islands'),
('ES', 'Spain'),
('LK', 'Sri Lanka'),
('SD', 'Sudan'),
('SR', 'Suriname'),
('SJ', 'Svalbard and Jan Mayen'),
('SZ', 'Swaziland'),
('SE', 'Sweden'),
('CH', 'Switzerland'),
('SY', 'Syrian Arab Republic'),
('TW', 'Taiwan, Province of China'),
('TJ', 'Tajikistan'),
('TZ', 'Tanzania, United Republic of'),
('TH', 'Thailand'),
('TL', 'Timor-Leste'),
('TG', 'Togo'),
('TK', 'Tokelau'),
('TO', 'Tonga'),
('TT', 'Trinidad and Tobago'),
('TN', 'Tunisia'),
('TR', 'Turkey'),
('TM', 'Turkmenistan'),
('TC', 'Turks and Caicos Islands'),
('TV', 'Tuvalu'),
('UG', 'Uganda'),
('UA', 'Ukraine'),
('AE', 'United Arab Emirates'),
('GB', 'United Kingdom'),
('US', 'United States'),
('UM', 'United States Minor Outlying Islands'),
('UY', 'Uruguay'),
('UZ', 'Uzbekistan'),
('VU', 'Vanuatu'),
('VE', 'Venezuela'),
('VN', 'Viet Nam'),
('VG', 'Virgin Islands, British'),
('VI', 'Virgin Islands, U.S.'),
('WF', 'Wallis and Futuna'),
('EH', 'Western Sahara'),
('YE', 'Yemen'),
('ZM', 'Zambia'),
('ZW', 'Zimbabwe');


    SELECT * FROM countries;

    CREATE TABLE states (
        UF VARCHAR(2) NOT NULL PRIMARY KEY UNIQUE,
        name VARCHAR(100) NOT NULL UNIQUE,
        code_id VARCHAR(2) NOT NULL,
        FOREIGN KEY (code_id) REFERENCES countries(code)
        ON UPDATE CASCADE ON DELETE CASCADE
    );


    INSERT INTO states (UF, name, code_id)
VALUES
('AC', 'Acre', 'BR'),
('AL', 'Alagoas', 'BR'),
('AP', 'Amapá', 'BR'),
('AM', 'Amazonas', 'BR'),
('BA', 'Bahia', 'BR'),
('CE', 'Ceará', 'BR'),
('DF', 'Distrito Federal', 'BR'),
('ES', 'Espírito Santo', 'BR'),
('GO', 'Goiás', 'BR'),
('MA', 'Maranhão', 'BR'),
('MT', 'Mato Grosso', 'BR'),
('MS', 'Mato Grosso do Sul', 'BR'),
('MG', 'Minas Gerais', 'BR'),
('PA', 'Pará', 'BR'),
('PB', 'Paraíba', 'BR'),
('PR', 'Paraná', 'BR'),
('PE', 'Pernambuco', 'BR'),
('PI', 'Piauí', 'BR'),
('RJ', 'Rio de Janeiro', 'BR'),
('RN', 'Rio Grande do Norte', 'BR'),
('RS', 'Rio Grande do Sul', 'BR'),
('RO', 'Rondônia', 'BR'),
('RR', 'Roraima', 'BR'),
('SC', 'Santa Catarina', 'BR'),
('SP', 'São Paulo', 'BR'),
('SE', 'Sergipe', 'BR'),
('TO', 'Tocantins', 'BR');


SELECT states.UF, states.name, states.code_id, countries.name FROM states INNER JOIN countries WHERE countries.code = states.code_id;

CREATE TABLE cities (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL,
    state_id VARCHAR(2) NOT NULL,
    FOREIGN KEY (state_id) REFERENCES states(UF)
    ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO cities (name, state_id)
VALUES
('São Paulo', 'SP'),
('Campinas', 'SP'),
('Santo André', 'SP'),
('São Bernardo do Campo', 'SP'),
('Osasco', 'SP'),
('Sorocaba', 'SP'),
('Ribeirão Preto', 'SP'),
('São José dos Campos', 'SP'),
('Guarulhos', 'SP'),
('Piracicaba', 'SP'),
('Bauru', 'SP'),
('Santos', 'SP'),
('Jundiaí', 'SP'),
('Mogi das Cruzes', 'SP'),
('Franca', 'SP'),
('Taubaté', 'SP'),
('Barueri', 'SP'),
('Limeira', 'SP'),
('Indaiatuba', 'SP'),
('Araraquara', 'SP'),
('Presidente Prudente', 'SP'),
('São Vicente', 'SP'),
('Diadema', 'SP'),
('Carapicuíba', 'SP'),
('Itaquaquecetuba', 'SP'),
('Suzano', 'SP'),
('Catanduva', 'SP'),
('Atibaia', 'SP');


SELECT * FROM cities;


CREATE TABLE NEIGHBORHOOD   (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL,
    city_id INTEGER NOT NULL,
    FOREIGN KEY (city_id) REFERENCES cities(id)
    ON UPDATE CASCADE ON DELETE CASCADE
)

SELECT * FROM "NEIGHBORHOOD";


SELECT * FROM locations;
CREATE TABLE locations (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    location VARCHAR(100) NOT NULL,
    location_number INTEGER NOT NULL,
    type_complement VARCHAR(100),
    complement VARCHAR(100),
    NEIGHBORHOOD_id INTEGER NOT NULL,
    city_id INTEGER NOT NULL,
    FOREIGN KEY (city_id) REFERENCES cities(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (NEIGHBORHOOD_id) REFERENCES NEIGHBORHOOD(id)
    ON UPDATE CASCADE ON DELETE CASCADE
);

 CREATE TABLE addresses (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    address_tag VARCHAR(100) NOT NULL,
    location_id INTEGER NOT NULL,
    FOREIGN KEY (location_id) REFERENCES locations(id)
    ON UPDATE CASCADE ON DELETE CASCADE
);
DROP TABLE addresses;
CREATE TABLE days_of_week(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    abvr VARCHAR(3) NOT NULL UNIQUE,
    day VARCHAR(100) NOT NULL UNIQUE
);

INSERT INTO days_of_week (abvr, day) VALUES
    ('DOM', 'Domingo'),
    ('SEG', 'Segunda-Feira'),
    ('TER', 'Terça-Feira'),
    ('QUA', 'Quarta-Feira'),
    ('QUI', 'Quinta-Feira'),
    ('SEX', 'Sexta-Feira'),
    ('SAB', 'Sábado');

DROP TABLE days_of_week;
CREATE TABLE full_hours (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    hour VARCHAR(5) NOT NULL UNIQUE
);
drop table full_hours;
INSERT INTO full_hours (hour) VALUES
('00:00'),
('01:00'),
('02:00'),
('03:00'),
('04:00'),
('05:00'),
('06:00'),
('07:00'),
('08:00'),
('09:00'),
('10:00'),
('11:00'),
('12:00'),
('13:00'),
('14:00'),
('15:00'),
('16:00'),
('17:00'),
('18:00'),
('19:00'),
('20:00'),
('21:00'),
('22:00'),
('23:00');

CREATE TABLE full_minutes (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    minute VARCHAR(5) NOT NULL UNIQUE
);

INSERT INTO full_minutes (minute) VALUES
('00'),
('01'),
('02'),
('03'),
('04'),
('05'),
('06'),
('07'),
('08'),
('09'),
('10'),
('11'),
('12'),
('13'),
('14'),
('15'),
('16'),
('17'),
('18'),
('19'),
('20'),
('21'),
('22'),
('23'),
('24'),
('25'),
('26'),
('27'),
('28'),
('29'),
('30'),
('31'),
('32'),
('33'),
('34'),
('35'),
('36'),
('37'),
('38'),
('39'),
('40'),
('41'),
('42'),
('43'),
('44'),
('45'),
('46'),
('47'),
('48'),
('49'),
('50'),
('51'),
('52'),
('53'),
('54'),
('55'),
('56'),
('57'),
('58'),
('59');


CREATE TABLE months_of_year (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    abvr VARCHAR(3) NOT NULL UNIQUE,
    month VARCHAR(20) NOT NULL UNIQUE
);

INSERT INTO months_of_year (abvr, month) VALUES
('JAN', 'Janeiro'),
('FEV', 'Fevereiro'),
('MAR', 'Março'),
('ABR', 'Abril'),
('MAI', 'Maio'),
('JUN', 'Junho'),
('JUL', 'Julho'),
('AGO', 'Agosto'),
('SET', 'Setembro'),
('OUT', 'Outubro'),
('NOV', 'Novembro'),
('DEZ', 'Dezembro');

CREATE TABLE days_of_month (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    day VARCHAR(2) NOT NULL UNIQUE
);

INSERT INTO days_of_month (day) VALUES
('01'),
('02'),
('03'),
('04'),
('05'),
('06'),
('07'),
('08'),
('09'),
('10'),
('11'),
('12'),
('13'),
('14'),
('15'),
('16'),
('17'),
('18'),
('19'),
('20'),
('21'),
('22'),
('23'),
('24'),
('25'),
('26'),
('27'),
('28'),
('29'),
('30'),
('31');


